/*
 * Copyright (c) 2021 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define NAV 1
#define OTH 2
#define NUM 3
#define SYM 4
#define MED 5
#define FUN 6

&lt {
    flavor = "tap-preferred";
    tapping_term_ms = <250>;
};

/ {
    behaviors {
        qe: comma_pipe {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_PIPE";
            #binding-cells = <0>;
            bindings = <&kp LS(MINUS)>, <&kp N1>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        
         hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <250>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
           hmc: homerow_modsc {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow modsc";
            #binding-cells = <2>;
            tapping_term_ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";
	
/*              34-KEY POSITIONS

  ╭────────────────────╮ ╭────────────────────╮
  │  0   1   2   3   4 │ │  5   6   7   8   9 │
  │ 10  11  12  13  14 │ │ 15  16  17  18  19 │
  │ 20  21  22  23  24 │ │ 25  26  27  28  29 │
  ╰───────────╮ 30  31 │ │ 32  33 ╭───────────╯
              ╰────────╯ ╰────────╯            */

        combo_aa {
            timeout-ms = <30>;
            key-positions = <10 11>;
            bindings = <&kp LBKT>;
            layers = <3>;
        };

        combo_cit {
            timeout-ms = <30>;
            key-positions = <6 16>;
            bindings = <&kp LS(N2)>;
            layers = <0>;
        };

        combo_esc {
            timeout-ms = <30>;
            key-positions = <3 13>;
            bindings = <&kp EQUAL>;
            layers = <0>;
        };

        combo_tab {
            timeout-ms = <30>;
            key-positions = <7 17>;
            bindings = <&kp TAB>;
            layers = <0>;
        };
    
           combo_enter {
            timeout-ms = <30>;
            key-positions = <8 18>;
            bindings = <&kp ENTER>;
            layers = <0>; 
            
         };
 
            combo_minus{
            timeout-ms = <30>;
            key-positions = <1 11>;
            bindings = <&kp BSPC>;
            layers = <3>; 
         };        
          combo_w {
            timeout-ms = <30>;
            key-positions = <11 21>;
            bindings = <&kp LGUI>;
            layers = <0>;
        };

        combo_la {
            timeout-ms = <30>;
            key-positions = <12 22>;
            bindings = <&kp LALT>;
            layers = <0>;
        };

        combo_lc {
            timeout-ms = <30>;
            key-positions = <0 1>;
            bindings = <&kp SQT>;
            layers = <3>;
        };
    
           combo_rc {
            timeout-ms = <30>;
            key-positions = <15 26>;
            bindings = <&kp RCTRL>;
            layers = <3>; 
        };

        combo_rs {
            timeout-ms = <30>;
            key-positions = <17 27>;
            bindings = <&kp LALT>;
            layers = <0>;            
 
         };        
           combo_rw {
            timeout-ms = <30>;
            key-positions = <18 28>;
            bindings = <&kp RGUI>;
            layers = <0>; 
         }; 
         
           combo_x {
            timeout-ms = <30>;
            key-positions = <4 14>;
            bindings = <&kp X>;
            layers = <0>;
        };
    
           combo_z {
            timeout-ms = <30>;
            key-positions = <15 25>;
            bindings = <&kp Z>;
            layers = <0>; 
            
         };
         
           combo_q {
            timeout-ms = <30>;
            key-positions = <5 15>;
            bindings = <&kp Q>;
            layers = <0>; 
            
         };
           combo_bspcv {
            timeout-ms = <30>;
            key-positions = <16 17>;
            bindings = <&kp BSPC>;
            layers = <3>; 
         }; 
           combo_bspcvt {
            timeout-ms = <30>;
            key-positions = <9 19>;
            bindings = <&kp RC(BSPC)>;
            layers = <0>; 
         };        
    };


    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Base";
            bindings = <
            &kp C  &kp U &kp O &kp I    &lt MED SLASH         &kp B &kp K         &kp L &kp M  &kp V
            &kp S &kp LBKT &kp E &kp A  &kp Y                       &kp F &kp D         &kp N  &kp T &kp G 
           &qe &kp SQT &kp SEMI &hmc LCTRL DOT  &kp COMMA        &kp P   &hmc LCTRL H  &kp W  &kp J &kp LS(N2)
                                &mo NUM       &hmc LSHIFT SPC      &lt NAV R  &mo OTH     
            >;
        };

        nav_layer {
            label = "Nav";
            bindings = <
                &trans     &trans     &trans      &trans          &trans       &trans           &kp BSPC       &kp UARW    &kp DEL    &kp PG_UP
                &trans     &trans     &trans      &trans          &trans       &trans           &kp LARW       &kp DARW    &kp RARW   &kp PG_DN
                &trans     &trans     &trans      &trans          &trans       &trans           &kp LC(BSPC)   &kp PG_DN   &kp PG_UP  &kp END
                                                  &trans          &kp LC(BSPC) &trans           &trans
            >;
        };

        other_layer {
            label = "Other";
            bindings = <
                &trans	   &trans     &trans      &trans          &trans       &trans           &trans         &trans       &trans       &bt BT_CLR
                &trans     &trans     &trans      &trans          &trans       &trans           &trans         &trans       &trans       &trans
                &trans     &trans     &trans      &trans          &trans       &bt BT_SEL 0     &bt BT_SEL 1   &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
                                                  &trans          &trans       &trans           &trans
            >;
        };

        num_layer {
            label = "Num";
            bindings = <
                &kp LBKT   &kp N7     &kp N8      &kp N9          &kp RBKT      &trans          &trans         &trans      &trans     &trans
                &kp N0     &kp N4     &kp N5      &kp N6          &kp EQUAL     &trans          &trans         &trans      &trans     &trans
                &kp GRAVE  &kp N1     &kp N2      &kp N3          &kp BSLH      &trans          &trans         &trans      &trans     &trans
                                                  &kp N0          &kp MINUS     &trans          &trans
            >;
        };

        sym_layer {
            label = "Sym";
            bindings = <
                &kp LBRC     &kp LS(N7)  &kp LS(N8)  &kp LS(N9) &kp RBRC        &trans &trans   &trans    &trans    &trans
                &kp COLON    &kp LS(N4)  &kp LS(N5)  &kp LS(N6) &kp PLUS        &trans &trans   &trans    &trans    &trans
                &kp TILDE    &kp LS(N1)  &kp LS(N2)  &kp LS(N3) &kp LS(BSLH)    &trans &trans   &trans    &trans    &trans
                                                   &kp LS(N0) &kp UNDER         &trans &trans
            >;
        };

        media_layer {
            label = "Media";
            bindings = <
                &trans	   &kp C_PREV &kp C_VOL_UP &kp C_PP       &none        &trans           &trans         &trans       &trans       &trans
                &trans     &kp C_NEXT &kp C_VOL_DN &kp C_STOP     &trans       &trans           &kp C_PREV     &kp C_VOL_DN &kp C_VOL_UP &kp C_NEXT
                &trans     &trans     &trans      &trans          &trans       &trans           &trans         &trans       &trans       &trans
                                                  &kp LA(TAB)     &kp LC(TAB)  &kp C_STOP       &kp C_PLAY_PAUSE
            >;
        };

        fun_layer {
            label = "Fun";
            bindings = <
                &kp F12     &kp F7     &kp F8      &kp F9     &kp PSCRN         &trans          &trans         &trans      &trans     &trans
                &kp F11     &kp F4     &kp F5      &kp F6     &kp SLCK          &trans          &trans         &trans      &trans     &trans
                &kp F10     &kp F1     &kp F2      &kp F3     &kp PAUSE_BREAK   &trans          &trans         &trans      &trans     &trans
                                                   &none      &none             &trans          &trans
            >;
        };
    };
};

