/*
 * Copyright (c) 2021 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define NAV 1
#define OTH 2
#define NUM 3
#define SYM 4
#define MED 5
#define FUN 6

#define COMBO(NAME, BINDINGS, KEYPOS, MS, LAYERS) \
  combo_##NAME { \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
    timeout-ms = <MS>; \
    layers = <LAYERS>; \
  };

&lt {
    flavor = "tap-preferred";
    tapping_term_ms = <250>;
};

/ {
    combos {
        compatible = "zmk,combos";
	
/*              34-KEY POSITIONS

  ╭────────────────────╮ ╭────────────────────╮
  │  0   1   2   3   4 │ │  5   6   7   8   9 │
  │ 10  11  12  13  14 │ │ 15  16  17  18  19 │
  │ 20  21  22  23  24 │ │ 25  26  27  28  29 │
  ╰───────────╮ 30  31 │ │ 32  33 ╭───────────╯
              ╰────────╯ ╰────────╯            */
	
	COMBO(um, &kp RBKT, 25 26, 30, 0)
	COMBO(nj, &nj, 23 24, 30, 0)
	COMBO(ac, &kp EQUAL, 15 16, 30, 0)
	COMBO(tab, &kp TAB, 26 27, 30, 0)
	COMBO(enter, &kp ENTER, 27 28, 30, 0 1)
 	COMBO(tog, &tog 1, 30 31, 30, 0 1)
        COMBO(lwin, &kp LGUI, 11 21, 30, 0)  
        COMBO(lalt, &kp LALT, 12 22, 30, 0)
	COMBO(ralt, &kp LALT, 17 27, 30, 0)
     	COMBO(rwin, &kp RGUI, 18 28, 30, 0)
 	COMBO(x, &kp X, 6 7, 30, 0)
	COMBO(z, &kp Z, 5 6, 30, 0)
	COMBO(q, &kp Q, 7 8, 30, 0)    
	COMBO(at, &at, 13 14, 30, 0)

         };        

    behaviors {
        qe: comma_pipe {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_PIPE";
            #binding-cells = <0>;
            bindings = <&kp LS(MINUS)>, <&kp N1>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
	
	nj: nino_nino {
            compatible = "zmk,behavior-mod-morph";
            label = "nino nino";
            #binding-cells = <0>;
            bindings = <&kp RA(RBKT)>, <&kp N4>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        
	at: at {
            compatible = "zmk,behavior-mod-morph";
            label = "at";
            #binding-cells = <0>;
            bindings = <&kp RA(N2)>, <&kp LS(N6)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
	
         hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <250>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
           hmc: homerow_modsc {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow modsc";
            #binding-cells = <2>;
            tapping_term_ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };


   


    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Base";
            bindings = <
                &kp LBKT   &kp U      &kp O      &kp C            &lt MED COMMA   &kp B        &kp K         &kp L  &kp M  &kp V
                &kp A      &kp I      &kp E      &kp S            &kp DOT         &kp H        &kp D         &kp N  &kp T  &kp G 
                &kp Y      &kp SQT    &kp SEMI   &hmc LCTRL SLASH &qe             &kp P        &hmc LCTRL F  &kp W  &kp J  &kp LS(N2)
                                                 &none            &hmc LSHIFT SPC &lt NAV R    &mo OTH     
            >;
        };

        nav_layer {
            label = "Nav";
            bindings = <
                &kp SLASH  &kp N7     &kp N8      &kp N9          &kp LS(BSLH)   &trans           &kp BSPC       &kp UARW    &kp DEL    &kp PG_UP
                &kp MINUS  &kp N4     &kp N5      &kp N6          &kp LS(N7)     &kp LC(BSPC)     &kp LARW       &kp DARW    &kp RARW   &kp PG_DN
                &kp LS(N0) &kp N1     &kp N2      &hmc LCTRL N3   &kp COMMA      &trans           &none          &kp PG_DN   &kp PG_UP  &kp END
                                        &hmc RALT ENTER   &hmc LSHIFT N0         &trans           &trans
            >;
        };

        other_layer {
            label = "Other";
            bindings = <
                &trans	   &trans     &trans      &trans          &trans       &trans           &trans         &trans       &trans       &bt BT_CLR
                &trans     &trans     &trans      &trans          &trans       &trans           &trans         &trans       &trans       &trans
                &trans     &trans     &trans      &trans          &trans       &bt BT_SEL 0     &bt BT_SEL 1   &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
                                                  &trans          &trans       &trans           &trans
            >;
        };

        num_layer {
            label = "Num";
            bindings = <
                &kp LBKT   &kp N7     &kp N8      &kp N9          &kp RBKT      &trans          &trans         &trans      &trans     &trans
                &kp N0     &kp N4     &kp N5      &kp N6          &kp EQUAL     &trans          &trans         &trans      &trans     &trans
                &kp GRAVE  &kp N1     &kp N2      &kp N3          &kp BSLH      &trans          &trans         &trans      &trans     &trans
                                                  &kp N0          &kp MINUS     &trans          &trans
            >;
        };

        sym_layer {
            label = "Sym";
            bindings = <
                &kp LBRC     &kp LS(N7)  &kp LS(N8)  &kp LS(N9) &kp RBRC        &trans &trans   &trans    &trans    &trans
                &kp COLON    &kp LS(N4)  &kp LS(N5)  &kp LS(N6) &kp PLUS        &trans &trans   &trans    &trans    &trans
                &kp TILDE    &kp LS(N1)  &kp LS(N2)  &kp LS(N3) &kp LS(BSLH)    &trans &trans   &trans    &trans    &trans
                                                   &kp LS(N0) &kp UNDER         &trans &trans
            >;
        };

        media_layer {
            label = "Media";
            bindings = <
                &trans	   &kp C_PREV &kp C_VOL_UP &kp C_PP       &none        &trans           &trans         &trans       &trans       &trans
                &trans     &kp C_NEXT &kp C_VOL_DN &kp C_STOP     &trans       &trans           &kp C_PREV     &kp C_VOL_DN &kp C_VOL_UP &kp C_NEXT
                &trans     &trans     &trans      &trans          &trans       &trans           &trans         &trans       &trans       &trans
                                                  &kp LA(TAB)     &kp LC(TAB)  &kp C_STOP       &kp C_PLAY_PAUSE
            >;
        };

        fun_layer {
            label = "Fun";
            bindings = <
                &kp F12     &kp F7     &kp F8      &kp F9     &kp PSCRN         &trans          &trans         &trans      &trans     &trans
                &kp F11     &kp F4     &kp F5      &kp F6     &kp SLCK          &trans          &trans         &trans      &trans     &trans
                &kp F10     &kp F1     &kp F2      &kp F3     &kp PAUSE_BREAK   &trans          &trans         &trans      &trans     &trans
                                                   &none      &none             &trans          &trans
            >;
        };
    };
};
